{"pageProps":{"post":{"slug":"aoc-2021-reflections","title":"Advent of Code 2021 Reflections","date":"2022-01-06T12:00:00.000Z","coverImage":{"src":"/assets/blog/aoc-2021-reflections/tzyl-aoc2021.png","width":256,"height":64},"ogImage":"/assets/blog/aoc-2021-reflections/tzyl-aoc2021.png","content":"<h2>Intro</h2>\n<p>I thoroughly enjoyed working through the <a href=\"https://adventofcode.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Advent of Code</a> 2021 problems this\nyear and feel accomplishment after attaining all 50 stars. My language of choice\nthis time was Python 3.10 which was refreshing to play with some of the modern\nfeatures given I work mostly in TypeScript these days.</p>\n<h2>Tools</h2>\n<p>The supporting toolchain for Python I used to write code quickly was:</p>\n<ul>\n<li>black</li>\n<li>isort</li>\n<li>flake8</li>\n<li>mypy</li>\n</ul>\n<p>The addition of <a href=\"https://www.python.org/dev/peps/pep-0484\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PEP 484</a> and application in <code>mypy</code> felt similar to TypeScript\nwith flexible typing on top of a dynamically typed language allowing for fast\niteration. The combination of <code>black</code>/<code>isort</code>/<code>flake8</code> for formatting and\nlinting also worked great as the analog of <code>prettier</code>/<code>eslint</code> for JS.</p>\n<h2>Solutions</h2>\n<p>Check out my repo <a href=\"https://github.com/tzyl/aoc21\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tzyl/aoc21</a> for full solutions and accompanying notes\nexplaining the high level techniques employed.</p>"}},"__N_SSG":true}